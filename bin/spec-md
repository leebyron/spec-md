#!/usr/bin/env node

var path = require('path');
var specmd = require('../');
var yargs = require('yargs');


yargs.strict()
  .config('config')
  .option('metadata', {
    alias: 'm',
    describe: 'Additional metadata to be used in construction of the output',
    string: true,
    global: true,
    coerce: arg=>require(path.resolve(process.cwd(), path.normalize(arg))),
  })
  .command(['$0 <markdown>','html <markdown>'], 'Outputs HTML5', {}, 
    (argv)=>{
      return specmd.html(argv.markdown,argv.metadata ? argv.metadata : {})
      .then(_=>process.stdout.write(_))
      .catch(errorExit);
    }
  )
  .command(['plugin <package> <markdown>'], 'Outputs in the format of the specified plugin', 
  (yargs)=>{
    yargs.usage('plugin <package> <markdown> [-- plugin-args...]');
  }, 
  (argv)=>{
    return argv.package(argv._, 
                specmd.parse(argv.markdown), argv.metadata ? argv.metadata : {})
                .then(_=>process.stdout.write(_))
                .catch(errorExit);
  })
  .coerce('markdown', (arg)=>path.resolve(process.cwd(), path.normalize(arg)))
  .coerce('package', (arg)=>{
    console.error(`Loading ${arg} ...`);
    let package = null;
    let plugin = null;
    try {
      package = require.resolve(arg, {
        paths: [process.cwd()]
      });
      plugin = require(package);
    }
    catch(error) {
      console.error(`Could not load plugin (${arg}).`); 
      console.error('If the plugin is installed globally, is /usr/lib/node_modules in your NODE_PATH variable (%AppData%\\npm\\node_modules on windows)?');
      errorExit(error);
    }

    if(typeof plugin !== 'function') {
      errorExit(`The specified package (${package}) does not appear to be a plugin...`);
    }
    return plugin;
  })
  .help()
  .parse();

function errorExit(error) {
  error.line ? error.message : (error.stack || error)
  process.stderr.write(error + '\n');
  process.exit(1);
}
